@model smartHookah.Controllers.CreateReservationModel

@{
    ViewBag.Title = @Model.place.Name + "Prehlad rezervacii";

}
@Styles.Render("~/Content/gij")

<style>
    
    
     .container {
         max-width: 99%;
     }
    td.timeSlot :hover {
        background-color: aqua;
    }

    td.timeSlot.taken {
        background-color: red;
    }

    td.timeSlot.confirmed {
        background-color: yellow;
    }

    td.timeSlot.free {
        background-color: green;
    }

     td.timeSlot.selected {
         background-color: darkgray;
     }

    td.timeSlot {
        border: 1px solid;
    }

    td.tableCapacity {
        font-weight: bold;
    }


</style>

<div id="app">
    <div class="card">
        <div class="card-body">
          
                <div class="row">
                    <div class="form-group col-md-2">
                        <label><i class="fa fa-calendar"></i>&nbsp;Datum</label>
                        <input id="datepicker" class="form-control" />
                    </div>
                 
                        <div class="form-group col-md-1">
                            <label><i class="fa fa-clock-o"></i>Misto</label>
                            <select v-model="Selected.Table" class="form-control" v-cloak>
                                <option v-for="time in Reservations.Tables" :value="time.Id">{{time.Name}}</option>
                            </select>
                        </div>
                        <div class="form-group col-md-1">
                            <label><i class="fa fa-clock-o"></i>Cas</label>
                            <select v-model="Selected.Time" class="form-control" v-cloak>
                                <option v-for="time in Reservations.TimeSlots" :value="time.Value">{{time.Text}}</option>
                            </select>
                        </div>
                        <div class="form-group col-md-1">
                            <label><i class="fa fa-users">Osoby</i></label>
                            <select v-model="Selected.Persons" name="persons" class="form-control" v-cloak>
                                <option v-for="n in 8" :value="n">{{n}}</option>
                                <option value="100">100</option>
                            </select>
                        </div>

                        <div class="form-group col-md-1">
                            <label><i class="fa fa-clock-o"></i>V podniku sa zdržím</label>
                            <select v-model="Selected.Duration" class="form-control" v-cloak>
                                <option v-for="time in Reservations.Times" :value="time.Key">{{time.Value}}</option>
                            </select>
                        </div>

                        <div class="form-group col-md-1">
                            <label for="exampleTextarea" class="bmd-label-floating">Jméno</label>
                            <input type="text" class="form-control" v-model="Selected.Name" id="exampleTextarea" rows="3" />
                        </div>

                    <div class="form-group col-md-1">
                        <label for="exampleTextarea" class="bmd-label-floating">Správa</label>
                        <textarea class="form-control" v-model="Selected.Text" id="exampleTextarea" rows="3"></textarea>
                    </div>
                    <div class="col-md-3">
                        <a v-if="canCreateReservation" class="btn btn-success btn-raised" v-on:click="postReservation()">Create</a>
                        <div v-if="!canCreateReservation">
                            <a v-on:click="changeReservation() "class="btn btn-warning btn-raised">Change</a>
                            <a v-on:click="changeReservationStatus(3)" class="btn btn-success btn-raised">Confirm</a>
                            <a v-on:click="changeReservationStatus(1)" class="btn btn-danger btn-raised">Cancel</a>
                            <a v-on:click="addTable()" class="btn btn-danger btn-raised">Add table</a>
                        </div>
                    </div>
                    </div>
                  
         
              

            <div>
                <table class="table table-responsive reservationTable">
                    <thead>
                    <tr>
                        <th>Table</th>
                        <th></th>
                        <th v-for="time in Reservations.TimeSlots">{{time.Text}}</th>
                    </tr>
                    </thead>
                   
                    <tr is="reservation-row" v-for="item in Reservations.Tables" :key="item.Id"
                        v-bind:table="item" v-bind:times="Reservations.Reservations[item.Id]" 
                        v-bind:reservations="Reservations.TodayReservation" v-bind:selected="Selected" v-bind:selection="selection">

                    </tr>

                  
                </table>
            </div>

            <hr/>

         
        </div>
        <div class="card-footer">
            
        </div>
    </div>
    <div>  <div class="card-deck">
            <div class="card">
                <h4 class="card-header">Canceled reservation</h4>
                <div class="card-body">
                    <div class="list-group">
                        <div v-for="canceled in Reservations.Canceled">
                           {{canceled.Name}}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    
    <div class="modal fade" id="controll">
        <div class="modal-dialog" role="dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Reservation Details</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label><i class="fa fa-clock-o"></i>Misto</label>
                        <select v-model="Selected.Table" class="form-control" v-cloak>
                            <option v-for="time in Reservations.Tables" :value="time.Id">{{time.Name}}</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label><i class="fa fa-clock-o"></i>Cas</label>
                        <select v-model="Selected.Time" class="form-control" v-cloak>
                            <option v-for="time in Reservations.TimeSlots" :value="time.Value">{{time.Text}}</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label><i class="fa fa-users">Osoby</i></label>
                        <select v-model="Selected.Persons" name="persons" class="form-control" v-cloak>
                            <option v-for="n in 8" :value="n" >{{n}}</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                   
                    <div class="form-group">
                            <label><i class="fa fa-clock-o"></i>V podniku sa zdržím</label>
                            <select v-model="Selected.Duration" class="form-control" v-cloak>
                                <option v-for="time in Reservations.Times" :value="time.Key">{{time}}</option>
                            </select>
                        </div>
                    
                    <div class="form-group">
                        <label for="exampleTextarea" class="bmd-label-floating">Jméno</label>
                        <input type="text" class="form-control" v-model="Selected.Name" id="exampleTextarea" rows="3"/>
                    </div>

                    <div class="form-group">
                        <label for="exampleTextarea" class="bmd-label-floating">Správa</label>
                        <textarea class="form-control" v-model="Selected.Text" id="exampleTextarea" rows="3"></textarea>
                    </div>
                    <hr />
                        
                        <a v-if="canCreateReservation" class="btn btn-success btn-raised" v-on:click="postReservation()">Create</a>
                    <div v-if="!canCreateReservation">
                        <a class="btn btn-warning btn-raised">Change</a>
                        <a   v-on:click="changeReservationStatus(3)" class="btn btn-success btn-raised">Confirm</a>
                        <a v-on:click="changeReservationStatus(1)" class="btn btn-danger btn-raised">Cancel</a>
                    </div>

                   



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Order.Order.close</button>
                </div>


                <!-- /.modal-content -->

            </div>
            <!-- /.modal-dialog -->
        </div>
    </div>

</div>
<script src="https://unpkg.com/vue-multiselect@2.0.6"></script>
<link rel="stylesheet" href="https://unpkg.com/vue-multiselect@2.0.6/dist/vue-multiselect.min.css">
@Scripts.Render("~/bundles/gij")
@Scripts.Render("~/bundles/vue")
@Scripts.Render("~/bundles/babel")
@section scripts
{
    <script type="text/javascript">
        var hub = $.connection.reservationHub;
        $(function() {
            $('#datepicker').datepicker({
                showOtherMonths: true,
                weekStartDay: 1,
                uiLibrary: 'materialdesign',
                format: 'dd.mm.yyyy',
                minDate: moment().format('YYYY.MM.DD'),
                value: moment().format('DD.MM.YYYY'),
                change: function() {
                    v.dateChanged();
                }
            });
        })

        var placeId = @Model.place.Id;

        Vue.component('reservation-row',
            {
                props: ["table", "times", "reservations", "selected", "selection"],
                template:
                    `
                       <tr>
                        <td>{{table.Name}}</td>           
                        <td class='tableCapacity'>{{table.Capacity}}</td>
                        <reservation-colunm 
                            v-for="time,index in times" 
                            :key="time.Value" 
                            v-bind:table="table" 
                            v-bind:timeSlot="time" 
                            v-bind:index="index"
                            v-bind:reservation="reservations[time.Id]"
                            v-bind:selected="selected" v-bind:selection="selection">
                                
                        </reservation-colunm>
                        </tr>                        
                    `

            }
        );

        Vue.component('reservation-colunm',
            {
                props: ["table", "timeSlot", "index", "reservation", "selected", "selection"],
                template:
                    `
                       <td v-bind:colspan="colSpan" v-if="display" class="timeSlot taken" v-on:click="onTakenClick()" v-bind:class="{confirmed : confirmed,selected : check}">
                                 <div v-if="colSpan !== 0">
                                   {{reservation.Name}}&nbsp;<i class="fa fa-user"></i>{{table.Capacity}}/{{reservation.Persons}}
                                </div>                       
                        </td>
                          <td v-else-if="!timeSlot.Reserved" class="timeSlot free"  v-bind:class="{selected : check}"  v-on:click="onFreeClick()">
                                
                              
                        </td>                     

                    `,
                computed: {
                    colSpan: function() {
                        if (this.reservation == undefined)
                            return 0;

                        return this.reservation.TimeSlots;
                    },
                    confirmed: function() {
                        if (this.reservation == undefined)
                            return false;
                        if (this.reservation.State !== 0)
                            return true;
                        return false;

                    },
                    display: function() {
                        if (this.timeSlot.Reserved && this.reservation != undefined) {
                            return true;
                        }
                        return false;
                    },
                    check: function() {
                        if (this.selected.Table !== this.table.Id)
                            return false;

                        return this.selection.indexOf(this.index) > -1;
                    }

                },
                methods: {
                    onFreeClick: function(taken = false) {

                        this.selected.Table = this.table.Id;
                        this.selected.Time = this.timeSlot.Value;
                        if (!taken)
                            this.selected.Reservation = null;
                        this.selected.TimeIndex = this.index;
                    },

                    onTakenClick: function() {

                        this.selected.Reservation = this.reservation.Id;
                        this.selected.Persons = this.reservation.Persons;
                        this.selected.Name = this.reservation.Name;
                        this.selected.Duration = this.reservation.TimeSlots;
                        this.onFreeClick(true);
                        this.selected.LastReservedTable = this.table.Id;
                    }

                }
            }
        );


        var v = new Vue({
            el: '#app',
            created: function() {
                this.loadReservations();
                $.connection.hub.start()
                    .done(function() {
                        hub.server.joinPlace(placeId);
                    });


                $.connection.hub.disconnected(function() {
                    console.log("disconected");
                    setTimeout(function() {
                            $.connection.hub.start();
                            console.log("reconect");
                        },
                        5000); // Re-start connection after 5 seconds
                });
            },

            data: {
                DeniedReason: null,             
                PlaceId: placeId,
                Selected: {
                    Table: null,
                    format: 'dd.mm.yyyy',
                    Date: moment().format('DD.MM.YYYY'),
                    Time: '',
                    TimeIndex: 0,
                    Duration: 5,
                    Persons: 2,
                    Reservation: null,
                    Name: '',
                    Text: '',
                    TableItems: [],
                    LastReservedTable: 0,
                },
                Reservations: {
                    TimeSlots: [],
                    Tables: [],
                    Reservations: [],
                    Canceled: [],
                    Times: [],
                }
            },
            computed:
            {
                canCreateReservation: function() {
                    return this.Selected.Reservation == null;
                },
                selection: function() {
                    var result = [];
                    for (var i = this.Selected.TimeIndex; i < this.Selected.TimeIndex + this.Selected.Duration; i++) {
                        result.push(i);
                    }
                    return result;
                }
            },
            methods: {
                dateChanged() {
                    this.Selected.Date = $("#datepicker").val();
                    this.loadReservations();
                },

                changeReservationStatus: function(status) {
                    $.post(
                        '/Reservation/UpdateStatus/',
                        {
                            id: this.Selected.Reservation,
                            state: status
                        }, function(data) {
                            //v.loadReservations();
                        });
                },
                addTable: function() {
                    $.post(
                        '/Reservation/AddTable/',
                        {
                            id: this.Selected.Reservation,
                            tableId: this.Selected.Table,
                            
                        },function(data) {
                           // v.loadReservations();
                        });
                },
                changeReservation: function() {

                    $.post(
                        '/Reservation/ChangeReservation',
                        {
                            id: this.Selected.Reservation,
                            model: this.Selected,
                            tableId: this.Selected.LastReservedTable
                        },
                        function(data) {
                            //v.loadReservations();
                        }
                    );
                },
            loadReservations: function() {
                var _this = this;
                $.getJSON('/Reservation/PlaceReservation/',
                    {
                        id: placeId,
                        date: this.Selected.Date,
                    },
                    function(json) {
                        _this.Reservations = json;
                        if (json.TimeSlots.length > 0)
                            _this.Selected.Time = json.TimeSlots[0].Value;

                        if (_this.Reservations.Times.length > 0)
                            _this.Selected.Duration = _this.Reservations.Times[0].Key;
                       
                    });
            },
            postReservation: function() {
                var req = $.post(
                    '/Reservation/PostReservation?id=' + '@Model.place.Id',
                    this.Selected,
                    function(data) {
                        //v.loadReservations();
                    });


            }
        }
    });

        hub.client.reload = v.loadReservations;
    </script>
}
