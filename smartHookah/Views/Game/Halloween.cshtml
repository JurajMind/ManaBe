@model smartHookah.Controllers.SnowViewModel
@{
    ViewBag.Title = "Halloween";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
 
    <p class="card-title">
        Smoke hookah to start terror!!!
    </p>
    <div id="phaser-example"></div>
</div>

@Scripts.Render("~/bundles/phaser")
@section scripts
{
    <script type="text/javascript">

        var curentState = 1;

        var smoke = $.connection.smokeSessionHub;
        smoke.client.pufChange = function (direction, directionGraphValue) {
            curentState = directionGraphValue;
            console.log(directionGraphValue);
            if (curentState === 0) {
                back_emitter.on = false;
                mid_emitter.on = false;
                front_emitter.on = false;
            }

            if (curentState === 1) {
                back_emitter.on = true;
                mid_emitter.on = true;
                front_emitter.on = true;
            }

        }

        $.connection.hub.start()
             .done(function () {
                 smoke.server.joinSession('@Model.sessionId');
             });



        //  This example was created by Jens Anders Bakke

        var game = new Phaser.Game("100%", 600, Phaser.AUTO, 'phaser-example', { preload: preload, create: create });

        function preload() {

            @*game.load.image('sky', '@Url.Content("~/content/game/hall.jpg")');*@
            game.load.spritesheet('snowflakes','@Url.Content("~/content/game/hell1.png")', 17, 17);
            game.load.spritesheet('snowflakes_large', '@Url.Content("~/content/game/hell2.png")', 64, 64);

        }

        var max = 0;
        var front_emitter;
        var mid_emitter;
        var back_emitter;
        var update_interval = 4 * 60;
        var i = 0;

        function create() {

            //game.add.image(0, 0, 'sky');
            game.stage.backgroundColor = "#636363";
            back_emitter = game.add.emitter(game.world.centerX, -32, 100);
            back_emitter.makeParticles('snowflakes', [0, 1, 2, 3, 4, 5]);
            back_emitter.maxParticleScale = 2.6;
            back_emitter.minParticleScale = 1.2;
            back_emitter.setYSpeed(20, 100);
            back_emitter.gravity = 0;
            back_emitter.width = game.world.width * 1.5;
            back_emitter.minRotation = 0;
            back_emitter.maxRotation = 40;

            mid_emitter = game.add.emitter(game.world.centerX, -32, 60);
            mid_emitter.makeParticles('snowflakes', [0, 1, 2, 3, 4, 5]);
            mid_emitter.maxParticleScale = 2.2;
            mid_emitter.minParticleScale = 1.2;
            mid_emitter.setYSpeed(50, 150);
            mid_emitter.gravity = 0;
            mid_emitter.width = game.world.width * 1.5;
            mid_emitter.minRotation = 0;
            mid_emitter.maxRotation = 40;

            front_emitter = game.add.emitter(game.world.centerX, -32, 20);
            front_emitter.makeParticles('snowflakes_large', [0, 1, 2, 3, 4, 5]);
            front_emitter.maxParticleScale = 3;
            front_emitter.minParticleScale = 2.5;
            front_emitter.setYSpeed(100, 200);
            front_emitter.gravity = 0;
            front_emitter.width = game.world.width * 1.5;
            front_emitter.minRotation = 0;
            front_emitter.maxRotation = 40;

            changeWindDirection();

            back_emitter.start(false, 14000, 20);
            mid_emitter.start(false, 12000, 40);
            front_emitter.start(false, 6000, 1000);
            back_emitter.on = false;
            mid_emitter.on = false;
            front_emitter.on = false;

        }

        function update() {

            i++;

            if (i === update_interval) {
                changeWindDirection();
                update_interval = Math.floor(Math.random() * 20) * 60;
                i = 0;
            }

        }

        function changeWindDirection() {

            var multi = Math.floor((max + 200) / 4),
                frag = (Math.floor(Math.random() * 100) - multi);
            max = max + frag;

            if (max > 200) max = 150;
            if (max < -200) max = -150;

            setXSpeed(back_emitter, max);
            setXSpeed(mid_emitter, max);
            setXSpeed(front_emitter, max);


        }

        function setXSpeed(emitter, max) {

            emitter.setXSpeed(max - 20, max);
            emitter.forEachAlive(setParticleXSpeed, this, max);

        }

        function setParticleXSpeed(particle, max) {

            particle.body.velocity.x = max - Math.floor(Math.random() * 30);

        }

        function onResize(){
            // this function is called each time the browser is resized, and re-positions
            // game elements to keep them in their right position according to game size
            levelText.x = Math.round((game.width-levelText.width)/2);
            levelText.y = game.height;
            titleText.x = Math.round((game.width-titleText.width)/2);
            fixedGroup.x = Math.round((game.width-320)/2);
            fixedGroup.y = Math.round((game.height-320)/2);
            movingGroup.x = Math.round((game.width-320)/2);
            movingGroup.y = Math.round((game.height-320)/2);		
        }

    </script>
}
